<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>FoodShare - NGO Panel</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/css/bootstrap.min.css" rel="stylesheet"/>
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-image: url("https://images.pexels.com/photos/1764702/pexels-photo-1764702.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2");

      margin: 0;
      padding: 0;
    }

    header {
      background-color: #ffffff;
      border-bottom: 1px solid #ddd;
    }

    .overlay {
      padding: 40px 20px;
    }

    .panel-title {
      font-size: 32px;
      font-weight: bold;
      margin-bottom: 30px;
      color: #333;
    }

    .map-container {
      height: 400px;
      border-radius: 12px;
      margin-bottom: 30px;
      position: relative;
      overflow: hidden;
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

    #map {
      height: 100%;
      width: 100%;
    }

    .filters {
      display: flex;
      flex-wrap: wrap;
      gap: 20px;
      margin-bottom: 30px;
    }

    .filter-group {
      display: flex;
      flex-direction: column;
      flex: 1;
    }

    .food-list {
      display: flex;
      flex-wrap: wrap;
      gap: 20px;
    }

    .food-card {
      background: white;
      border-radius: 16px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
      overflow: hidden;
      width: 300px;
      transition: transform 0.2s ease;
    }

    .food-card:hover {
      transform: scale(1.02);
    }

    .food-image {
      width: 100%;
      height: 180px;
      background-size: cover;
      background-position: center;
    }

    .food-details {
      padding: 15px;
    }

    .food-title {
      margin: 0 0 10px;
      font-size: 20px;
    }

    .food-meta {
      display: flex;
      justify-content: space-between;
      margin-bottom: 10px;
    }

    .food-freshness.fresh {
      color: green;
      font-weight: bold;
    }

    .food-freshness.moderate {
      color: orange;
      font-weight: bold;
    }

    .food-freshness.urgent {
      color: red;
      font-weight: bold;
    }

    .food-actions {
      display: flex;
      justify-content: space-between;
    }

    .modal {
      display: none;
      position: fixed;
      z-index: 1000;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      background: rgba(0,0,0,0.5);
      align-items: center;
      justify-content: center;
    }

    .modal-content {
      background: white;
      padding: 30px;
      border-radius: 16px;
      max-width: 500px;
      width: 100%;
      box-shadow: 0 2px 10px rgba(0,0,0,0.2);
    }

    .rating {
      display: flex;
      gap: 5px;
      font-size: 24px;
      margin-bottom: 15px;
    }

    .star {
      cursor: pointer;
      color: gray;
    }

    .star.active {
      color: gold;
    }

    .modal-actions {
      display: flex;
      justify-content: flex-end;
      gap: 10px;
    }

    /* Custom map controls */
    .map-controls {
      position: absolute;
      top: 10px;
      right: 10px;
      z-index: 1000;
      background: white;
      padding: 5px;
      border-radius: 5px;
      box-shadow: 0 0 10px rgba(0,0,0,0.2);
    }

    .legend {
      position: absolute;
      bottom: 10px;
      right: 10px;
      z-index: 1000;
      background: white;
      padding: 10px;
      border-radius: 5px;
      box-shadow: 0 0 10px rgba(0,0,0,0.2);
      font-size: 12px;
    }

    .legend-item {
      display: flex;
      align-items: center;
      margin: 5px 0;
    }

    .legend-color {
      width: 12px;
      height: 12px;
      border-radius: 50%;
      margin-right: 8px;
    }
  </style>
</head>
<body>
  <header class="d-flex flex-wrap justify-content-center py-3 mb-4 border-bottom bg-white">
    <a href="/" class="d-flex align-items-center mb-3 mb-md-0 me-md-auto text-decoration-none">
      <span class="fs-4">ZeroWaste</span>
    </a>
    <ul class="nav nav-pills">
      <li class="nav-item"><a href="/reclogin" class="nav-link">NGO</a></li>
      <li class="nav-item"><a href="/reclogin" class="nav-link">Individual</a></li>
      <li class="nav-item"><a href="/reclogin" class="nav-link">Volunteer</a></li>
      <li class="nav-item"><a href="/" class="nav-link">Home</a></li>
    </ul>
  </header>

  <div class="overlay container">
    <h1 class="panel-title">Individual Dashboard</h1>

    <div class="map-container">
      <div id="map"></div>
      <div class="map-controls">
        <select id="mapStyle" class="form-select form-select-sm">
          <option value="streets">Streets</option>
          <option value="satellite">Satellite</option>
          <option value="light">Light</option>
          <option value="dark">Dark</option>
        </select>
      </div>
      <div class="legend">
        <div class="legend-item">
          <span class="legend-color" style="background-color: #28a745;"></span>
          <span>Fresh (5+ days)</span>
        </div>
        <div class="legend-item">
          <span class="legend-color" style="background-color: #ffc107;"></span>
          <span>Near Expiry (1-4 days)</span>
        </div>
        <div class="legend-item">
          <span class="legend-color" style="background-color: #dc3545;"></span>
          <span>Expired/Picked</span>
        </div>
      </div>
    </div>

   <h1>Available Food</h1>

    <div class="food-list">
      <% foods.forEach(food => { %>
        <div class="food-card">
          <div class="food-image" style="background-image: url('https://st4.depositphotos.com/3424147/20229/i/1600/depositphotos_202292286-stock-photo-healthy-products-sources-of-carbohydrates.jpg');"></div>
          <div class="food-details">
            <h3 class="food-title"><%= food.food_item %></h3>
            <div class="food-meta">
              <span class="food-freshness <%= food.freshness%>"><%= food.freshness %></span>
              <span class="food-distance"><%= food.location %> km</span>
             
            </div>
            <div class="food-actions">
              <button class="btn btn-secondary">Details</button>
              <button class="btn btn-primary" onclick="openModal()">Request</button>
            </div>
          </div>
        </div>
      <% }) %>
    </div>
  </div>

  <!-- Receipt Confirmation Modal -->
  <div id="receiptModal" class="modal">
    <div class="modal-content">
      <h2>Confirm Receipt</h2>
      <p>Please confirm you received the donation:</p>
      <div class="rating">
        <span class="star" onclick="rate(1)">★</span>
        <span class="star" onclick="rate(2)">★</span>
        <span class="star" onclick="rate(3)">★</span>
        <span class="star" onclick="rate(4)">★</span>
        <span class="star" onclick="rate(5)">★</span>
      </div>
      <textarea class="form-control mb-3" placeholder="Optional feedback..."></textarea>
      <div class="modal-actions">
        <button class="btn btn-secondary" onclick="closeModal()">Cancel</button>
        <button class="btn btn-primary" onclick="submitReceipt()">Confirm</button>
      </div>
    </div>
  </div>

  <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
  <script>
    // Initialize the map
    const map = L.map('map').setView([13.6288, 79.4192], 13);
    
    // Base maps
    const streets = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    });
    
    const satellite = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {
        attribution: 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'
    });
    
    const light = L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors &copy; <a href="https://carto.com/attributions">CARTO</a>'
    });
    
    const dark = L.tileLayer('https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors &copy; <a href="https://carto.com/attributions">CARTO</a>'
    });
    
    // Add default base map
    streets.addTo(map);
    
    // Food locations data
    const locations = [
        {
            position: [13.6355, 79.4199],
            title: "Tirumala Temple Kitchen",
            status: "fresh",
            inventory: "250 kg rice, 150 kg dal",
            expiry: "Expires in 7 days",
            address: "Tirumala, Tirupati"
        },
        {
            position: [13.6321, 79.4234],
            title: "Srinivasa Annaprasadam",
            status: "fresh",
            inventory: "180 kg vegetables, 100 kg flour",
            expiry: "Expires in 6 days",
            address: "Tiruchanur Road, Tirupati"
        },
        {
            position: [13.6288, 79.4256],
            title: "Balaji Food Distribution",
            status: "near-expiry",
            inventory: "120 kg rice, 80 kg sambar",
            expiry: "Expires in 3 days",
            address: "Near Bus Stand, Tirupati"
        },
        {
            position: [13.6253, 79.4221],
            title: "Padmavathi Community Kitchen",
            status: "near-expiry",
            inventory: "90 kg chapatis, 60 kg curry",
            expiry: "Expires in 2 days",
            address: "Tirupati Rural"
        },
        {
            position: [13.6302, 79.4178],
            title: "Govinda's Restaurant Donation",
            status: "expired",
            inventory: "50 kg sweets, 30 kg snacks",
            expiry: "Expired yesterday",
            address: "MG Road, Tirupati"
        }
    ];
    
    // Create custom icons
    function createIcon(status) {
        let iconColor;
        switch(status) {
            case 'fresh': iconColor = '#28a745'; break;
            case 'near-expiry': iconColor = '#ffc107'; break;
            case 'expired': iconColor = '#dc3545'; break;
        }
        
        return L.divIcon({
            className: 'custom-marker',
            html: `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M12 2C8.13 2 5 5.13 5 9C5 14.25 12 22 12 22C12 22 19 14.25 19 9C19 5.13 15.87 2 12 2Z" fill="${iconColor}" stroke="white" stroke-width="2"/>
                    <circle cx="12" cy="9" r="3" fill="white"/>
                  </svg>`,
            iconSize: [24, 24],
            iconAnchor: [12, 24]
        });
    }
    
    // Add markers to map
    locations.forEach(location => {
        const marker = L.marker(location.position, {
            title: location.title,
            icon: createIcon(location.status),
            riseOnHover: true
        });
        
        marker.bindPopup(`
            <div style="min-width: 200px;">
                <h3 style="margin: 0 0 5px 0; color: #6f42c1;">${location.title}</h3>
                <p style="margin: 0 0 3px 0;"><strong>Status:</strong> <span style="color: ${
                    location.status === 'fresh' ? '#28a745' : 
                    location.status === 'near-expiry' ? '#ffc107' : '#dc3545'
                };">${location.status.replace('-', ' ')}</span></p>
                <p style="margin: 0 0 3px 0;"><strong>Inventory:</strong> ${location.inventory}</p>
                <p style="margin: 0 0 3px 0;"><strong>Expiry:</strong> ${location.expiry}</p>
                <p style="margin: 10px 0 0 0; font-size: 0.8em; color: #6c757d;">${location.address}</p>
            </div>
        `);
        
        marker.addTo(map);
    });
    
    // Change map style
    document.getElementById('mapStyle').addEventListener('change', (e) => {
        switch(e.target.value) {
            case 'streets':
                map.removeLayer(satellite);
                map.removeLayer(light);
                map.removeLayer(dark);
                streets.addTo(map);
                break;
            case 'satellite':
                map.removeLayer(streets);
                map.removeLayer(light);
                map.removeLayer(dark);
                satellite.addTo(map);
                break;
            case 'light':
                map.removeLayer(streets);
                map.removeLayer(satellite);
                map.removeLayer(dark);
                light.addTo(map);
                break;
            case 'dark':
                map.removeLayer(streets);
                map.removeLayer(satellite);
                map.removeLayer(light);
                dark.addTo(map);
                break;
        }
    });

    // Modal functions
    function openModal() {
      document.getElementById('receiptModal').style.display = 'flex';
    }

    function closeModal() {
      document.getElementById('receiptModal').style.display = 'none';
      resetRating();
    }

    function submitReceipt() {
      alert('Thank you for confirming!');
      closeModal();
    }

    function rate(rating) {
      resetRating();
      for (let i = 1; i <= rating; i++) {
        document.querySelectorAll('.star')[i - 1].classList.add('active');
      }
    }

    function resetRating() {
      document.querySelectorAll('.star').forEach(star => star.classList.remove('active'));
    }
  </script>
</body>
</html>